
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gulshankumar
 */
public class select_mandi extends javax.swing.JFrame {

  //  String url = "jdbc:sqlite:/Users/gulshankumar/Documents/SOFTWARE/mandi.db";
  //  int season_id = 0;
    /**
     * Creates new form test_form
     */
    public select_mandi() {
        initComponents();
        load_crop_year();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        cb_crop_year = new javax.swing.JComboBox<>();
        jPanel30 = new javax.swing.JPanel();
        cb_mandi = new javax.swing.JComboBox<>();
        jLabel51 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        cb_crop_type = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("SELECT MANDI");
        jPanel29.add(jLabel20);

        jPanel1.add(jPanel29, java.awt.BorderLayout.PAGE_START);

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel28.setLayout(new java.awt.GridBagLayout());

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("CROP YEAR");
        jLabel31.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        jPanel28.add(jLabel31, gridBagConstraints);

        cb_crop_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PLEASE SELECT" }));
        cb_crop_year.setPreferredSize(new java.awt.Dimension(150, 25));
        cb_crop_year.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_crop_yearItemStateChanged(evt);
            }
        });
        jPanel28.add(cb_crop_year, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        jPanel10.add(jPanel28, gridBagConstraints);

        jPanel30.setLayout(new java.awt.GridBagLayout());

        cb_mandi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PLEASE SELECT" }));
        cb_mandi.setPreferredSize(new java.awt.Dimension(150, 25));
        cb_mandi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_mandiItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel30.add(cb_mandi, gridBagConstraints);

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel51.setText("MANDI");
        jLabel51.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        jPanel30.add(jLabel51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        jPanel10.add(jPanel30, gridBagConstraints);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        cb_crop_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PLEASE SELECT" }));
        cb_crop_type.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel31.add(cb_crop_type, gridBagConstraints);

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("CROP TYPE");
        jLabel52.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel31.add(jLabel52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        jPanel10.add(jPanel31, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jButton10.setText("CLOSE");
        jButton10.setPreferredSize(new java.awt.Dimension(100, 25));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel41.add(jButton10, gridBagConstraints);

        jButton9.setText("SUBMIT");
        jButton9.setPreferredSize(new java.awt.Dimension(100, 25));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel41.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 0);
        jPanel10.add(jPanel41, gridBagConstraints);

        jPanel1.add(jPanel10, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_crop_yearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_crop_yearItemStateChanged

        load_mandi();


    }//GEN-LAST:event_cb_crop_yearItemStateChanged

    private void cb_mandiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_mandiItemStateChanged
        load_crop_type();

        // TODO add your handling code here:
    }//GEN-LAST:event_cb_mandiItemStateChanged

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        System.exit(0);          // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (cb_crop_year.getSelectedItem().toString().equals("Please Select")
                || cb_mandi.getSelectedItem().toString().equals("Please Select")
                || cb_crop_type.getSelectedItem().toString().equals("Please Select")) {
            JOptionPane.showMessageDialog(null, "Please Select All Options");
        } else {
               int s_id=0;
          s_id=load_season_id();  
       //     load_season_id();
            if (s_id > 0) {        
                    JOptionPane.showMessageDialog(null, s_id);
               main_page obj = new main_page();
                obj.season_id = s_id;
            //    obj.mandi=cb_mandi.getSelectedItem().toString();
            //    obj.crop_year=cb_crop_year.getSelectedItem().toString();
               // obj.total_mandi_detail();

                obj.setTitle("CROP YEAR: " + cb_crop_year.getSelectedItem().toString() + "          " + "MANDI:  "
                        + cb_mandi.getSelectedItem().toString() + "          " + "TYPE:  " + cb_crop_type.getSelectedItem().toString());
            //    obj.load_aarthia();
                this.setVisible(false);
                this.dispose();
                obj.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(null, "Please Check Your Record Again");
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(select_mandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(select_mandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(select_mandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(select_mandi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new select_mandi().setVisible(true);
            }
        });
    }

    public void load_crop_year() {
        //    conn=null;
        cb_crop_year.removeAllItems();
        cb_crop_year.addItem("Please Select");
        try {
            Connection conn = connectdb.getConn();
            String query = "select distinct crop_year  from season order by  crop_year DESC ";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet result = statement.executeQuery();
            while (result.next()) {
                cb_crop_year.addItem(result.getString("crop_year"));
            }
            //    conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + "  crop");
        }

    } // load crop year to cb

    public void load_mandi() {

        try {
            Connection conn = connectdb.getConn();
            cb_mandi.removeAllItems();
            cb_mandi.addItem("Please Select");
            String query = "select distinct mandi  from season where crop_year=? order by  mandi ASC ";
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, cb_crop_year.getSelectedItem().toString());
            ResultSet result = statement.executeQuery();
            while (result.next()) {
                cb_mandi.addItem(result.getString("mandi"));
            }
            //    conn.close();
        } catch (Exception e) {
            //    JOptionPane.showMessageDialog(null,e+"  mandi");
        }

    } // load mandi to cb

    public void load_crop_type() {
        try {
            Connection conn = connectdb.getConn();
            cb_crop_type.removeAllItems();
            cb_crop_type.addItem("Please Select");
            String query = "select  crop_type  from season where crop_year=? and mandi=?  ";
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, cb_crop_year.getSelectedItem().toString());
            statement.setString(2, cb_mandi.getSelectedItem().toString());
            ResultSet result = statement.executeQuery();
            while (result.next()) {
                cb_crop_type.addItem(result.getString(1));

            }
            //    conn.close();
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null,e);
        }
    } // load data
 public int load_season_id() {
        int id=0;
        try {
              Connection conn = connectdb.getConn();
            String query = "select season_id from season where crop_year=? and mandi=? and crop_type=? ";
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, cb_crop_year.getSelectedItem().toString());
            statement.setString(2, cb_mandi.getSelectedItem().toString());
            statement.setString(3, cb_crop_type.getSelectedItem().toString());
            ResultSet result = statement.executeQuery();
            while (result.next()) {
               id = result.getInt("season_id");
            }
         //   conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error on season_id " + e);
        }
return id;
    }
  

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_crop_type;
    private javax.swing.JComboBox<String> cb_crop_year;
    private javax.swing.JComboBox<String> cb_mandi;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel41;
    // End of variables declaration//GEN-END:variables
}
